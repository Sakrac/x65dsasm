6510_Port_Data_Direction = 0 data
6510_Port_Data = 1 data
C64_System_Interrupt = $314-$316 data
C64_System_NMI = $318-$31a data
Vic_Sprite_Pos = $d000-$d011 data
Vic_Screen_Ctrl = $d011 data
Vic_Raster_Line = $d012 data
Vic_Light_Pen = $d013-$d015 data
Vic_Sprite_Enable = $d015 data
Vic_Sprite_Ctrl = $d016 data
Vic_Sprite_Height_Dbl = $d017 data
Vic_Memory_Setup = $d018 data
Vic_Int_Status = $d019-$d01b data
Vic_Sprite_Pri = $d01b data
Vic_Sprite_MultiCol = $d01C data
Vic_Sprite_Width_Dbl = $d01d data
Vic_Sprite_Sprite_Coll = $d01e data
Vic_Sprite_Background_Coll = $d01f data
Vic_Border_Color = $d020 data
Vic_Back_Color = $d021-$d025 data
Vic_Sprite_Color_Extra = $d025-$d027 data
Vic_Sprite_Color = $d027-$d02f data
Vic = $d02f-$d400 data
SID_Voice1_Freq = $d400-$d402 data
SID_Voice1_Pulse = $d402-$d404 data
SID_Voice1_Ctrl = $d404 data
SID_Voice1_AttackDecay = $d405 data
SID_Voice1_SustainRelease = $d406 data
SID_Voice2_Freq = $d407-$d409 data
SID_Voice2_Pulse = $d409-$d40b data
SID_Voice2_Ctrl = $d40b data
SID_Voice2_AttackDecay = $d40c data
SID_Voice2_SustainRelease = $d40d data
SID_Voice3_Freq = $d40e-$d410 data
SID_Voice3_Pulse = $d410-$d412 data
SID_Voice3_Ctrl = $d412 data
SID_Voice3_AttackDecay = $d413 data
SID_Voice3_SustainRelease = $d414 data
SID_Filter_Cutoff = $d415-$d417 data
SID_Filter_Ctrl = $d417 data
SID_Volume_Filter_Mode = $d418 data
SID_Paddles = $d419-$d41b data
SID_Voice3_Wave_Out = $d41b data
SID_Voice3_ADSR_Out = $d41c data
SID = $D41d-$D800 data
ColorRam = $D800-$DC00 data
CIA1_PortA_KBD_Joy2 = $dc00 data
CIA1_PortB_KBD_Joy1 = $dc01 data
CIA1_PortA_Data_Dir = $dc02 data
CIA1_PortB_Data_Dir = $dc03 data
CIA1_TimerA = $dc04-$dc06 data
CIA1_TimerB = $dc06-$dc08 data
CIA1_TimeOfDay = $dc08-$dc0c data
CIA1_Serial_Shift = $dc0c data
CIA1_Interrupt_Ctrl_Status = $dc0d data
CIA1_TimerA_Ctrl = $dc0e data
CIA1_TimerB_Ctrl = $dc0f data
CIA1 = $DC10-$DD00 data
CIA2_PortA_Serial = $dd00 data
CIA2_PortB_RS232 = $dd01 data
CIA2_PortA_Data_Dir = $dd02 data
CIA2_PortB_Data_Dir = $dd03 data
CIA2_TimerA = $dd04-$dd06 data
CIA2_TimerB = $dd06-$dd08 data
CIA2_TimeOfDay = $dd08-$dd0c data
CIA2_Serial_Shift = $dd0c data
CIA2_Interrupt_Ctrl_Status = $dd0d data
CIA2_TimerA_Ctrl = $dd0e data
CIA2_TimerB_Ctrl = $dd0f data
CIA2 = $dd10-$de00 data
IO_Area1 = $de00-$df00 data
IO_Area2 = $df00-$e000 data

; from sta.c64.org

KRN_SCINIT_JMP = $FF81 code Initialize VIC; restore default input/output to keyboard/screen; clear screen; set PAL/NTSC switch and interrupt timer.
KRN_SCINIT = $FF5B code Initialize VIC; restore default input/output to keyboard/screen; clear screen; set PAL/NTSC switch and interrupt timer.
KRN_IOINIT_JMP = $FF84 code Initialize CIA's, SID volume; setup memory configuration; set and start interrupt timer.
KRN_IOINIT= $FDA3 code Initialize CIA's, SID volume; setup memory configuration; set and start interrupt timer.
KRN_RAMTAS_JMP = $FF87 code Clear memory addresses $0002-$0101 and $0200-$03FF; run memory test and set start and end address of BASIC work area accordingly; set screen memory to $0400 and datasette buffer to $033C.
KRN_RAMTAS = FD50 code Clear memory addresses $0002-$0101 and $0200-$03FF; run memory test and set start and end address of BASIC work area accordingly; set screen memory to $0400 and datasette buffer to $033C.
KRN_RESTOR_JMP = $FF8A code Fill vector table at memory addresses $0314-$0333 with default values.
KRN_RESTOR = $FD15 code Fill vector table at memory addresses $0314-$0333 with default values.
KRN_VECTOR_JMP = $FF8D code Copy vector table at memory addresses $0314-$0333 from or into user table.
KRN_VECTOR = $FD1A code Copy vector table at memory addresses $0314-$0333 from or into user table.
KRN_SETMSG_JMP = $FF90 code Set system error display switch at memory address $009D.
KRN_SETMSG = $FE18 code Set system error display switch at memory address $009D.
KRN_LSTNSA_JMP = $FF93 code Send LISTEN secondary address to serial bus. (Must call LISTEN beforehands.)
KRN_LSTNSA = $EDB9. code Send LISTEN secondary address to serial bus. (Must call LISTEN beforehands.)
KRN_TALKSA_JMP = $FF96 code Send TALK secondary address to serial bus. (Must call TALK beforehands.)
KRN_TALKSA = $EDC7 code Send TALK secondary address to serial bus. (Must call TALK beforehands.)
KRN_MEMBOT_JMP = $FF99 code Save or restore start address of BASIC work area.
KRN_MEMBOT = $FE25 code Save or restore start address of BASIC work area.
KRN_MEMTOP_JMP = $FF9C code Save or restore end address of BASIC work area.
KRN_MEMTOP = $FE34 code Save or restore end address of BASIC work area.
KRN_SCNKEY_JMP = $FF9F code Query keyboard; put current matrix code into memory address $00CB, current status of shift keys into memory address $028D and PETSCII code into keyboard buffer.
KRN_SCNKEY = $EA87 code Query keyboard; put current matrix code into memory address $00CB, current status of shift keys into memory address $028D and PETSCII code into keyboard buffer.
KRN_SETTMO_JMP = $FFA2 code Unknown. (Set serial bus timeout.)
KRN_SETTMO = $FE21 code Unknown. (Set serial bus timeout.)
KRN_IECIN_JMP = $FFA5 code Read byte from serial bus. (Must call TALK and TALKSA beforehands.)
KRN_IECIN = $EE13 code Read byte from serial bus. (Must call TALK and TALKSA beforehands.)
KRN_IECOUT_JMP = $FFA8 code Write byte to serial bus. (Must call LISTEN and LSTNSA beforehands.)
KRN_IECOUT = $EDDD code Write byte to serial bus. (Must call LISTEN and LSTNSA beforehands.)
KRN_UNTALK_JMP = $FFAB code Send UNTALK command to serial bus.
KRN_UNTALK = $EDEF code Send UNTALK command to serial bus.
KRN_UNLSTN_JMP = $FFAE code Send UNLISTEN command to serial bus.
KRN_UNLSTN = $EDFE code Send UNLISTEN command to serial bus.
KRN_LISTEN_JMP = $FFB1 code Send LISTEN command to serial bus.
KRN_LISTEN = $ED0C code Send LISTEN command to serial bus.
KRN_TALK_JMP = $FFB4 code Send TALK command to serial bus.
KRN_TALK = $ED09 code Send TALK command to serial bus.
KRN_READST_JMP = $FFB7 code Fetch status of current input/output device, value of ST variable. (For RS232, status is cleared.)
KRN_READST = $FE07 code Fetch status of current input/output device, value of ST variable. (For RS232, status is cleared.)
KRN_SETLFS_JMP = $FFBA code Set file parameters.
KRN_SETLFS = $FE00 code Set file parameters.
KRN_SETNAM_JMP = $FFBD code Set file name parameters.
KRN_SETNAM = $FDF9 code Set file name parameters.
KRN_OPEN_JMP = $FFC0 code Open file. (Must call SETLFS and SETNAM beforehands.)
KRN_OPEN = $F34A code Open file. (Must call SETLFS and SETNAM beforehands.)
KRN_CLOSE_JMP = $FFC3 code Close file.
KRN_CLOSE = $F291 code Close file.
KRN_CHKIN_JMP = $FFC6 code Define file as default input. (Must call OPEN beforehands.)
KRN_CHKIN = $F20E code Define file as default input. (Must call OPEN beforehands.)
KRN_CHKOUT_JMP = $FFC9 code Define file as default output. (Must call OPEN beforehands.)
KRN_CHKOUT = $F250 code Define file as default output. (Must call OPEN beforehands.)
KRN_CLRCHN_JMP = $FFCC code Close default input/output files (for serial bus, send UNTALK and/or UNLISTEN); restore default input/output to keyboard/screen.
KRN_CLRCHN = $F333 code Close default input/output files (for serial bus, send UNTALK and/or UNLISTEN); restore default input/output to keyboard/screen.
KRN_CHRIN_JMP = $FFCF code Read byte from default input (for keyboard, read a line from the screen). (If not keyboard, must call OPEN and CHKIN beforehands.)
KRN_CHRIN = $F157 code Read byte from default input (for keyboard, read a line from the screen). (If not keyboard, must call OPEN and CHKIN beforehands.)
KRN_CHROUT_JMP = $FFD2 code Write byte to default output. (If not screen, must call OPEN and CHKOUT beforehands.)
KRN_CHROUT = $F1CA code Write byte to default output. (If not screen, must call OPEN and CHKOUT beforehands.)
KRN_LOAD_JMP = $FFD5 code Load or verify file. (Must call SETLFS and SETNAM beforehands.)
KRN_LOAD = $F49E code Load or verify file. (Must call SETLFS and SETNAM beforehands.)
KRN_SAVE_JMP = $FFD8 code Save file. (Must call SETLFS and SETNAM beforehands.)
KRN_SAVE = $F5DD code Save file. (Must call SETLFS and SETNAM beforehands.)
KRN_SETTIM_JMP = $FFDB code Set Time of Day, at memory address $00A0-$00A2.
KRN_SETTIM = $F6E4 code Set Time of Day, at memory address $00A0-$00A2.
KRN_RDTIM_JMP = $FFDE code read Time of Day, at memory address $00A0-$00A2.
KRN_RDTIM = $F6DD code read Time of Day, at memory address $00A0-$00A2.
KRN_STOP_JMP = $FFE1 code Query Stop key indicator, at memory address $0091; if pressed, call CLRCHN and clear keyboard buffer.
KRN_STOP = $F6ED code Query Stop key indicator, at memory address $0091; if pressed, call CLRCHN and clear keyboard buffer.
KRN_GETIN_JMP = $FFE4 code Read byte from default input. (If not keyboard, must call OPEN and CHKIN beforehands.)
KRN_GETIN = $F13E code Read byte from default input. (If not keyboard, must call OPEN and CHKIN beforehands.)
KRN_CLALL_JMP = $FFE7 code Clear file table; call CLRCHN.
KRN_CLALL = $F32F code Clear file table; call CLRCHN.
KRN_UDTIM_JMP = $FFEA code Update Time of Day, at memory address $00A0-$00A2, and Stop key indicator, at memory address $0091.
KRN_UDTIM = $F69B code Update Time of Day, at memory address $00A0-$00A2, and Stop key indicator, at memory address $0091.
KRN_SCREEN_JMP = $FFED code Fetch number of screen rows and columns.
KRN_SCREEN = $E505 code Fetch number of screen rows and columns.
KRN_PLOT_JMP = $FFF0 code Save or restore cursor position.
KRN_PLOT = $E50A code Save or restore cursor position.
KRN_IOBASE_JMP = $FFF3 code Fetch CIA #1 base address.
KRN_IOBASE = $E500 code Fetch CIA #1 base address.

NMIVector = $fffa-$fffc pointers vector to NMI interrupt
ResetVector = $fffc-$fffe pointers vector to reset address
IntVector = $fffe-$10000 pointers vector to interrupt address

